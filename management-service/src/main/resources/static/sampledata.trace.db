2023-02-09 08:01:49 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-09 08:01:58 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-09 08:02:28 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:02:33 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 11:03:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CLIENT" not found (this database is empty); SQL statement:
select c1_0.id,c1_0.name,c1_0.phone from client c1_0 [42104-214]
2023-02-09 08:07:21 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-09 08:07:21 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-09 08:07:26 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-09 08:07:26 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-09 08:07:39 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:07:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE Client (\000a                         id INT PRIMARY KEY AUTO_INCREMENT,\000a                         name VARCHAR(50) NOT NULL,\000a                         phone VARCHAR(20) NOT NULL,\000a[*])"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE Client (\000a                         id INT PRIMARY KEY AUTO_INCREMENT,\000a                         name VARCHAR(50) NOT NULL,\000a                         phone VARCHAR(20) NOT NULL,\000a[*])"; expected "identifier"; SQL statement:
CREATE TABLE Client (
                         id INT PRIMARY KEY AUTO_INCREMENT,
                         name VARCHAR(50) NOT NULL,
                         phone VARCHAR(20) NOT NULL,
) [42001-210]
2023-02-09 08:07:39 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:07:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE Client (\000a                         id INT PRIMARY KEY AUTO_INCREMENT,\000a                         name VARCHAR(50) NOT NULL,\000a                         phone VARCHAR(20) NOT NULL,\000a[*])"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE Client (\000a                         id INT PRIMARY KEY AUTO_INCREMENT,\000a                         name VARCHAR(50) NOT NULL,\000a                         phone VARCHAR(20) NOT NULL,\000a[*])"; expected "identifier"; SQL statement:
CREATE TABLE Client (
                         id INT PRIMARY KEY AUTO_INCREMENT,
                         name VARCHAR(50) NOT NULL,
                         phone VARCHAR(20) NOT NULL,
) [42001-210]
2023-02-09 08:07:43 jdbc[5]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:10:40 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-09 08:10:43 jdbc[6]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:10:48 jdbc[7]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:10:58 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:11:12 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:11:19 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:11:26 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:11:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE Client (\000a                         id INT PRIMARY KEY  AUTO_INCREMENT,\000a                         name VARCHAR(50) NOT NULL,\000a                         phone VARCHAR(20) NOT NULL,\000a[*])"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE Client (\000a                         id INT PRIMARY KEY  AUTO_INCREMENT,\000a                         name VARCHAR(50) NOT NULL,\000a                         phone VARCHAR(20) NOT NULL,\000a[*])"; expected "identifier"; SQL statement:
CREATE TABLE Client (
                         id INT PRIMARY KEY  AUTO_INCREMENT,
                         name VARCHAR(50) NOT NULL,
                         phone VARCHAR(20) NOT NULL,
) [42001-210]
2023-02-09 08:11:26 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:12:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE Client (\000a                        id INT PRIMARY KEY  AUTO_INCREMENT,\000a                        name VARCHAR(50) NOT NULL,\000a                        phone VARCHAR(20) NOT NULL,\000a[*])"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE Client (\000a                        id INT PRIMARY KEY  AUTO_INCREMENT,\000a                        name VARCHAR(50) NOT NULL,\000a                        phone VARCHAR(20) NOT NULL,\000a[*])"; expected "identifier"; SQL statement:
CREATE TABLE Client (
                        id INT PRIMARY KEY  AUTO_INCREMENT,
                        name VARCHAR(50) NOT NULL,
                        phone VARCHAR(20) NOT NULL,
) [42001-210]
2023-02-09 08:12:10 jdbc[5]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:14:05 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:14:11 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:14:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE Client (\000a                        id INT PRIMARY KEY  AUTO_INCREMENT,\000a                        name VARCHAR(50) NOT NULL,\000a                        phone VARCHAR(20) NOT NULL,\000a[*])"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE Client (\000a                        id INT PRIMARY KEY  AUTO_INCREMENT,\000a                        name VARCHAR(50) NOT NULL,\000a                        phone VARCHAR(20) NOT NULL,\000a[*])"; expected "identifier"; SQL statement:
CREATE TABLE Client (
                        id INT PRIMARY KEY  AUTO_INCREMENT,
                        name VARCHAR(50) NOT NULL,
                        phone VARCHAR(20) NOT NULL,
) [42001-210]
2023-02-09 08:14:11 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:14:39 jdbc[5]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:14:52 jdbc[6]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:14:58 jdbc[7]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:24:55 jdbc[8]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:24:55 jdbc[9]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:25:02 jdbc[10]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:41:22 jdbc[8]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "SERVICES", пока существует зависимый объект "CONSTRAINT_E4B5"
Cannot drop "SERVICES" because "CONSTRAINT_E4B5" depends on it; SQL statement:
drop table SERVICES [90107-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:651)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:97)
	at org.h2.command.ddl.DropTable.update(DropTable.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:190)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:143)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.executeUpdate(RemoteStatementImpl.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:41:22 jdbc[11]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:41:36 jdbc[12]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 08:42:32 jdbc[13]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 11:25:46 jdbc[14]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 11:33:43 jdbc[15]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 11:34:01 jdbc[16]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 11:34:38 jdbc[17]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 15:05:09 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-02-09 15:05:10 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-02-09 14:23:17 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-09 14:23:23 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 17:24:16 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "id" не найден
Column "id" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getLong(JdbcResultSet.java:745)
	at ru.set404.clients.repositories.RepositorySQLImpl.getClientByPhoneNumber(TherapistsRepositorySQL.java:42)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-09 17:25:49 jdbc[16]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "id" не найден
Column "id" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getLong(JdbcResultSet.java:745)
	at ru.set404.clients.repositories.RepositorySQLImpl.getClientByPhoneNumber(TherapistsRepositorySQL.java:42)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-09 17:26:07 jdbc[19]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "id" не найден
Column "id" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getLong(JdbcResultSet.java:745)
	at ru.set404.clients.repositories.RepositorySQLImpl.getClientByPhoneNumber(TherapistsRepositorySQL.java:42)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-09 17:26:31 jdbc[22]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "id" не найден
Column "id" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getLong(JdbcResultSet.java:745)
	at ru.set404.clients.repositories.RepositorySQLImpl.getClientByPhoneNumber(TherapistsRepositorySQL.java:42)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-09 17:28:03 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "id" не найден
Column "id" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getLong(JdbcResultSet.java:745)
	at ru.set404.clients.repositories.RepositorySQLImpl.getClientByPhoneNumber(TherapistsRepositorySQL.java:42)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-09 17:29:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "id" не найден
Column "id" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getLong(JdbcResultSet.java:745)
	at ru.set404.clients.repositories.RepositorySQLImpl.getClientByPhoneNumber(TherapistsRepositorySQL.java:42)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-09 17:29:56 jdbc[16]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "id" не найден
Column "id" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getLong(JdbcResultSet.java:745)
	at ru.set404.clients.repositories.RepositorySQLImpl.getClientByPhoneNumber(TherapistsRepositorySQL.java:42)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-09 17:30:42 jdbc[19]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "id" не найден
Column "id" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getLong(JdbcResultSet.java:745)
	at ru.set404.clients.repositories.RepositorySQLImpl.getClientByPhoneNumber(TherapistsRepositorySQL.java:42)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-09 17:33:06 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "id" не найден
Column "id" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getLong(JdbcResultSet.java:745)
	at ru.set404.clients.repositories.RepositorySQLImpl.getClientByPhoneNumber(TherapistsRepositorySQL.java:42)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-09 14:44:21 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 14:44:34 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 17:44:46 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-02-09 17:44:47 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-02-09 17:44:55 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at ru.set404.clients.repositories.RepositorySQLImpl.getClientByPhoneNumber(TherapistsRepositorySQL.java:36)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 80 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 74 more
2023-02-09 17:44:55 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at ru.set404.clients.repositories.RepositorySQLImpl.addClient(TherapistsRepositorySQL.java:54)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:80)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 80 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 74 more
2023-02-09 17:44:55 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 79 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 73 more
2023-02-09 14:45:18 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 17:45:23 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-02-09 17:45:24 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-02-09 14:45:51 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-09 14:45:56 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 14:46:19 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 14:47:20 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 14:47:24 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-09 18:22:22 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Сравнение массива (ARRAY) со скалярным значением
Values of types "TIMESTAMP" and "INTEGER" are not comparable; SQL statement:
SELECT * FROM appointments JOIN SERVICES S on S.SERVICE_ID = APPOINTMENTS.SERVICE_ID WHERE therapist_id = ? AND start_time BETWEEN ? AND ?+S.DURATION [90110-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.value.TypeInfo.checkComparable(TypeInfo.java:766)
	at org.h2.expression.condition.BetweenPredicate.optimize(BetweenPredicate.java:75)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:137)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:136)
	at org.h2.expression.Expression.optimizeCondition(Expression.java:148)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1177)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at ru.set404.clients.repositories.RepositorySQLImpl.isTimeAvailable(TherapistsRepositorySQL.java:82)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.isTimeAvailable(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-09 18:22:43 jdbc[16]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Сравнение массива (ARRAY) со скалярным значением
Values of types "TIMESTAMP" and "INTEGER" are not comparable; SQL statement:
SELECT * FROM appointments JOIN SERVICES S on S.SERVICE_ID = APPOINTMENTS.SERVICE_ID WHERE therapist_id = ? AND start_time BETWEEN ? AND ?+S.DURATION [90110-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.value.TypeInfo.checkComparable(TypeInfo.java:766)
	at org.h2.expression.condition.BetweenPredicate.optimize(BetweenPredicate.java:75)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:137)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:136)
	at org.h2.expression.Expression.optimizeCondition(Expression.java:148)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1177)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at ru.set404.clients.repositories.RepositorySQLImpl.isTimeAvailable(TherapistsRepositorySQL.java:82)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.isTimeAvailable(<generated>)
	at ru.set404.clients.services.ClientService.addAppoinment(TherapistService.java:18)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-11 18:36:54 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "client_name" не найден
Column "client_name" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getString(JdbcResultSet.java:301)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAppointmentsForTherapist(TherapistsRepositorySQL.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAppointmentsForTherapist(<generated>)
	at ru.set404.clients.services.ClientService.findAll(TherapistService.java:28)
	at ru.set404.clients.controllers.TherapistController.all(TherapistController.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-11 15:55:26 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:39:08 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:39:33 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:39:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "SERVICES", пока существует зависимый объект "CONSTRAINT_E4B5"
Cannot drop "SERVICES" because "CONSTRAINT_E4B5" depends on it; SQL statement:
drop table SERVICES [90107-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:651)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:97)
	at org.h2.command.ddl.DropTable.update(DropTable.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:190)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:143)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.executeUpdate(RemoteStatementImpl.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:39:33 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:39:37 jdbc[5]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:39:47 jdbc[6]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "SERVICES", пока существует зависимый объект "CONSTRAINT_E4B5"
Cannot drop "SERVICES" because "CONSTRAINT_E4B5" depends on it; SQL statement:
drop table SERVICES [90107-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:651)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:97)
	at org.h2.command.ddl.DropTable.update(DropTable.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:190)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:143)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.executeUpdate(RemoteStatementImpl.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:00 jdbc[7]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "SERVICES", пока существует зависимый объект "CONSTRAINT_E4B5"
Cannot drop "SERVICES" because "CONSTRAINT_E4B5" depends on it; SQL statement:
drop table SERVICES [90107-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:651)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:97)
	at org.h2.command.ddl.DropTable.update(DropTable.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:190)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:143)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.executeUpdate(RemoteStatementImpl.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:13 jdbc[8]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:36 jdbc[9]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:39 jdbc[10]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:42 jdbc[11]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:45 jdbc[12]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:51 jdbc[13]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "SERVICES", пока существует зависимый объект "CONSTRAINT_E4B5"
Cannot drop "SERVICES" because "CONSTRAINT_E4B5" depends on it; SQL statement:
drop table SERVICES [90107-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:651)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:97)
	at org.h2.command.ddl.DropTable.update(DropTable.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:190)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:143)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.executeUpdate(RemoteStatementImpl.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:40:56 jdbc[14]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:42:18 jdbc[15]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:44:52 jdbc[16]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:55:47 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:55:52 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:55:57 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 20:57:15 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "duration" не найден
Column "duration" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3518)
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:337)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableTimes(TherapistsRepositorySQL.java:199)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableTimes(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableTimes(TherapistService.java:42)
	at ru.set404.clients.controllers.ClientController.availableTime(ClientController.java:64)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-19 20:57:37 jdbc[14]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "duration" не найден
Column "duration" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3518)
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:337)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableTimes(TherapistsRepositorySQL.java:199)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableTimes(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableTimes(TherapistService.java:42)
	at ru.set404.clients.controllers.ClientController.availableTime(ClientController.java:64)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-19 20:57:56 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "duration" не найден
Column "duration" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3518)
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:337)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableTimes(TherapistsRepositorySQL.java:199)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableTimes(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableTimes(TherapistService.java:42)
	at ru.set404.clients.controllers.ClientController.availableTime(ClientController.java:64)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-19 17:58:53 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 17:59:27 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 18:00:41 jdbc[5]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 18:00:41 jdbc[6]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 18:02:15 jdbc[7]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 18:02:39 jdbc[8]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 21:03:46 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-02-19 21:03:47 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-02-19 21:04:01 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "duration" не найден
Column "duration" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3518)
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:337)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableTimes(TherapistsRepositorySQL.java:199)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableTimes(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableTimes(TherapistService.java:42)
	at ru.set404.clients.controllers.ClientController.availableTime(ClientController.java:64)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-19 18:04:24 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 18:05:52 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 18:14:12 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-19 18:14:12 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-19 18:14:23 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 18:14:24 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-19 21:29:02 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-02-19 21:29:03 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-02-19 21:30:16 jdbc[14]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#2" не установлен
Parameter "#2" is not set; SQL statement:
SELECT START_TIME FROM appointments WHERE therapist_id = ? AND FORMATDATETIME(start_time, 'yyyy-MM-dd') = ? [90012-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.query(CommandContainer.java:250)
	at org.h2.command.Command.executeQuery(Command.java:190)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:128)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAppointmentsByDay(TherapistsRepositorySQL.java:191)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableTimes(TherapistsRepositorySQL.java:213)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableTimes(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableTimes(TherapistService.java:42)
	at ru.set404.clients.controllers.ClientController.availableTime(ClientController.java:65)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-19 21:30:50 jdbc[19]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#2" не установлен
Parameter "#2" is not set; SQL statement:
SELECT START_TIME FROM appointments WHERE therapist_id = ? AND FORMATDATETIME(start_time, 'yyyy-MM-dd') = ? [90012-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.query(CommandContainer.java:250)
	at org.h2.command.Command.executeQuery(Command.java:190)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:128)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAppointmentsByDay(TherapistsRepositorySQL.java:191)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableTimes(TherapistsRepositorySQL.java:213)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableTimes(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableTimes(TherapistService.java:42)
	at ru.set404.clients.controllers.ClientController.availableTime(ClientController.java:65)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-19 21:31:51 jdbc[24]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#2" не установлен
Parameter "#2" is not set; SQL statement:
SELECT START_TIME FROM appointments WHERE therapist_id = ? AND FORMATDATETIME(start_time, 'yyyy-MM-dd') = ? [90012-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.query(CommandContainer.java:250)
	at org.h2.command.Command.executeQuery(Command.java:190)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:128)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAppointmentsByDay(TherapistsRepositorySQL.java:191)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableTimes(TherapistsRepositorySQL.java:213)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableTimes(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableTimes(TherapistService.java:42)
	at ru.set404.clients.controllers.ClientController.availableTime(ClientController.java:65)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-19 21:31:56 jdbc[26]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#2" не установлен
Parameter "#2" is not set; SQL statement:
SELECT START_TIME FROM appointments WHERE therapist_id = ? AND FORMATDATETIME(start_time, 'yyyy-MM-dd') = ? [90012-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.query(CommandContainer.java:250)
	at org.h2.command.Command.executeQuery(Command.java:190)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:128)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAppointmentsByDay(TherapistsRepositorySQL.java:191)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableTimes(TherapistsRepositorySQL.java:213)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableTimes(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableTimes(TherapistService.java:42)
	at ru.set404.clients.controllers.ClientController.availableTime(ClientController.java:65)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-19 21:31:56 jdbc[28]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#2" не установлен
Parameter "#2" is not set; SQL statement:
SELECT START_TIME FROM appointments WHERE therapist_id = ? AND FORMATDATETIME(start_time, 'yyyy-MM-dd') = ? [90012-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.query(CommandContainer.java:250)
	at org.h2.command.Command.executeQuery(Command.java:190)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:128)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAppointmentsByDay(TherapistsRepositorySQL.java:191)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableTimes(TherapistsRepositorySQL.java:213)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableTimes(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableTimes(TherapistService.java:42)
	at ru.set404.clients.controllers.ClientController.availableTime(ClientController.java:65)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-19 21:31:57 jdbc[30]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#2" не установлен
Parameter "#2" is not set; SQL statement:
SELECT START_TIME FROM appointments WHERE therapist_id = ? AND FORMATDATETIME(start_time, 'yyyy-MM-dd') = ? [90012-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.query(CommandContainer.java:250)
	at org.h2.command.Command.executeQuery(Command.java:190)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:128)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAppointmentsByDay(TherapistsRepositorySQL.java:191)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableTimes(TherapistsRepositorySQL.java:213)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableTimes(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableTimes(TherapistService.java:42)
	at ru.set404.clients.controllers.ClientController.availableTime(ClientController.java:65)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-20 10:58:41 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-24 14:56:22 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-24 17:56:45 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-02-24 17:56:46 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-02-24 17:59:30 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-02-24 17:59:31 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-02-24 17:59:49 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-02-24 17:59:50 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-02-24 15:00:11 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-24 18:00:19 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-02-24 18:00:20 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-02-24 15:24:13 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 14:37:55 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-26 14:38:32 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-26 14:38:56 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 14:39:05 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 14:39:07 jdbc[5]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 14:39:28 jdbc[6]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 15:20:44 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 15:32:52 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 18:38:40 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Сравнение массива (ARRAY) со скалярным значением
Values of types "TIME" and "DATE" are not comparable; SQL statement:
SELECT DISTINCT start_time FROM AVAILABILITY WHERE therapist_id = ? AND START_TIME >= CURRENT_DATE() AND MONTH(start_time) = ? [90110-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.value.TypeInfo.checkComparable(TypeInfo.java:766)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:159)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:137)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:136)
	at org.h2.expression.Expression.optimizeCondition(Expression.java:148)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1177)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAppointmentsByMonth(TherapistsRepositorySQL.java:243)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAppointmentsByMonth(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableDates(TherapistService.java:49)
	at ru.set404.clients.controllers.ClientController.availableDates(ClientController.java:79)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-26 18:39:46 jdbc[16]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Сравнение массива (ARRAY) со скалярным значением
Values of types "TIME" and "DATE" are not comparable; SQL statement:
SELECT DISTINCT start_time FROM AVAILABILITY WHERE therapist_id = ? AND START_TIME >= CURRENT_DATE() AND MONTH(start_time) = ? [90110-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.value.TypeInfo.checkComparable(TypeInfo.java:766)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:159)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:137)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:136)
	at org.h2.expression.Expression.optimizeCondition(Expression.java:148)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1177)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAppointmentsByMonth(TherapistsRepositorySQL.java:243)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAppointmentsByMonth(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableDates(TherapistService.java:49)
	at ru.set404.clients.controllers.ClientController.availableDates(ClientController.java:79)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-26 18:42:56 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "start_time" не найден
Column "start_time" not found [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3518)
	at org.h2.jdbc.JdbcResultSet.getTimestamp(JdbcResultSet.java:524)
	at ru.set404.clients.repositories.RepositorySQLImpl.getAvailableDates(TherapistsRepositorySQL.java:247)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.getAvailableDates(<generated>)
	at ru.set404.clients.services.ClientService.getAvailableDates(TherapistService.java:48)
	at ru.set404.clients.controllers.ClientController.availableDates(ClientController.java:79)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-26 15:46:47 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 15:47:11 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 15:47:11 jdbc[5]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 15:47:15 jdbc[6]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 15:47:56 jdbc[7]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 15:48:07 jdbc[8]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 18:48:35 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-02-26 18:48:36 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:11)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-02-26 16:22:21 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-26 20:46:19 jdbc[16]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Метод разрешен только для запросов. Используйте execute или executeUpdate вместо executeQuery
Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
UPDATE THERAPISTS SET NAME = ?, PASSWORD = ?, PHONE = ?, ROLE = ? WHERE THERAPIST_ID = ? [90002-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.Prepared.query(Prepared.java:256)
	at org.h2.command.CommandContainer.query(CommandContainer.java:251)
	at org.h2.command.Command.executeQuery(Command.java:190)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:128)
	at ru.set404.clients.repositories.RepositorySQLImpl.updateTherapist(TherapistsRepositorySQL.java:318)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.updateTherapist(<generated>)
	at ru.set404.clients.services.ClientService.updateTherapist(TherapistService.java:70)
	at ru.set404.clients.controllers.TherapistController.updateTherapist(TherapistController.java:83)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:734)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-26 21:21:20 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#5" не установлен
Parameter "#5" is not set; SQL statement:
INSERT INTO therapists (THERAPIST_ID, name, phone, password, role) VALUES (?, ?, ?, ?, ?) [90012-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at ru.set404.clients.repositories.RepositorySQLImpl.createTherapist(TherapistsRepositorySQL.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createTherapist(<generated>)
	at ru.set404.clients.services.ClientService.saveTherapist(TherapistService.java:60)
	at ru.set404.clients.controllers.TherapistController.newTherapist(TherapistController.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-26 21:22:47 jdbc[14]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#5" не установлен
Parameter "#5" is not set; SQL statement:
INSERT INTO therapists (THERAPIST_ID, name, phone, password, role) VALUES (?, ?, ?, ?, ?) [90012-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at ru.set404.clients.repositories.RepositorySQLImpl.createTherapist(TherapistsRepositorySQL.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createTherapist(<generated>)
	at ru.set404.clients.services.ClientService.saveTherapist(TherapistService.java:60)
	at ru.set404.clients.controllers.TherapistController.newTherapist(TherapistController.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-26 21:23:06 jdbc[15]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#5" не установлен
Parameter "#5" is not set; SQL statement:
INSERT INTO therapists (THERAPIST_ID, name, phone, password, role) VALUES (?, ?, ?, ?, ?) [90012-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at ru.set404.clients.repositories.RepositorySQLImpl.createTherapist(TherapistsRepositorySQL.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createTherapist(<generated>)
	at ru.set404.clients.services.ClientService.saveTherapist(TherapistService.java:60)
	at ru.set404.clients.controllers.TherapistController.newTherapist(TherapistController.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-26 21:25:17 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#5" не установлен
Parameter "#5" is not set; SQL statement:
INSERT INTO therapists (THERAPIST_ID, name, phone, password, role) VALUES (?, ?, ?, ?, ?) [90012-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at ru.set404.clients.repositories.RepositorySQLImpl.createTherapist(TherapistsRepositorySQL.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createTherapist(<generated>)
	at ru.set404.clients.services.ClientService.saveTherapist(TherapistService.java:62)
	at ru.set404.clients.controllers.TherapistController.newTherapist(TherapistController.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-27 00:29:01 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-27 00:29:22 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-27 05:44:47 jdbc[16]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "TIMESTAMP, BIGINT"
Data conversion error converting "TIMESTAMP, BIGINT"; SQL statement:
SELECT * FROM appointments WHERE therapist_id = ? AND start_time = ? [22018-214]
2023-02-27 05:44:47 jdbc[19]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "CAST(1677447000 AS BIGINT) (APPOINTMENTS: ""START_TIME"" TIMESTAMP NOT NULL)"
Data conversion error converting "CAST(1677447000 AS BIGINT) (APPOINTMENTS: ""START_TIME"" TIMESTAMP NOT NULL)"; SQL statement:
INSERT INTO appointments (client_id, therapist_id, service_id, start_time) VALUES (?, ?, ?, ?) [22018-214]
2023-02-27 05:45:05 jdbc[23]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "TIMESTAMP, BIGINT"
Data conversion error converting "TIMESTAMP, BIGINT"; SQL statement:
SELECT * FROM appointments WHERE therapist_id = ? AND start_time = ? [22018-214]
2023-02-27 05:45:05 jdbc[26]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "CAST(1677447000 AS BIGINT) (APPOINTMENTS: ""START_TIME"" TIMESTAMP NOT NULL)"
Data conversion error converting "CAST(1677447000 AS BIGINT) (APPOINTMENTS: ""START_TIME"" TIMESTAMP NOT NULL)"; SQL statement:
INSERT INTO appointments (client_id, therapist_id, service_id, start_time) VALUES (?, ?, ?, ?) [22018-214]
2023-02-27 05:46:19 jdbc[30]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "TIMESTAMP, BIGINT"
Data conversion error converting "TIMESTAMP, BIGINT"; SQL statement:
SELECT * FROM appointments WHERE therapist_id = ? AND start_time = ? [22018-214]
2023-02-27 05:46:19 jdbc[33]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "CAST(1677447000 AS BIGINT) (APPOINTMENTS: ""START_TIME"" TIMESTAMP NOT NULL)"
Data conversion error converting "CAST(1677447000 AS BIGINT) (APPOINTMENTS: ""START_TIME"" TIMESTAMP NOT NULL)"; SQL statement:
INSERT INTO appointments (client_id, therapist_id, service_id, start_time) VALUES (?, ?, ?, ?) [22018-214]
2023-02-27 05:46:51 jdbc[37]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "TIMESTAMP, BIGINT"
Data conversion error converting "TIMESTAMP, BIGINT"; SQL statement:
SELECT * FROM appointments WHERE therapist_id = ? AND start_time = ? [22018-214]
2023-02-27 05:48:13 jdbc[40]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "CAST(1677526200 AS BIGINT) (APPOINTMENTS: ""START_TIME"" TIMESTAMP NOT NULL)"
Data conversion error converting "CAST(1677526200 AS BIGINT) (APPOINTMENTS: ""START_TIME"" TIMESTAMP NOT NULL)"; SQL statement:
INSERT INTO appointments (client_id, therapist_id, service_id, start_time) VALUES (?, ?, ?, ?) [22018-214]
2023-02-27 05:50:52 jdbc[16]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "TIMESTAMP, BIGINT"
Data conversion error converting "TIMESTAMP, BIGINT"; SQL statement:
SELECT * FROM appointments WHERE therapist_id = ? AND start_time = ? [22018-214]
2023-02-27 05:52:24 jdbc[16]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "TIMESTAMP, BIGINT"
Data conversion error converting "TIMESTAMP, BIGINT"; SQL statement:
SELECT * FROM appointments WHERE therapist_id = ? AND start_time = ? [22018-214]
2023-02-27 05:53:21 jdbc[23]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "TIMESTAMP, BIGINT"
Data conversion error converting "TIMESTAMP, BIGINT"; SQL statement:
SELECT * FROM appointments WHERE therapist_id = ? AND start_time = ? [22018-214]
2023-02-27 02:56:04 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-02-27 02:56:07 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-28 16:13:31 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-02-28 17:33:21 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-01 15:16:56 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-01 19:11:28 jdbc[15]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица содержит записи со значением NULL в поле "AVAILABILITY_ID"
Column "AVAILABILITY_ID" contains null values; SQL statement:
MERGE INTO AVAILABILITY (START_TIME, END_TIME, THERAPIST_ID, AVAILABLE_DATE) VALUES (?, ?, ?, ?) [90081-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.dml.Merge.merge(Merge.java:171)
	at org.h2.command.dml.Merge.update(Merge.java:109)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at ru.set404.clients.repositories.RepositorySQLImpl.addOrUpdateAvailableTime(TherapistsRepositorySQL.java:397)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.addOrUpdateAvailableTime(<generated>)
	at ru.set404.clients.services.ClientService.addAvailableTime(TherapistService.java:94)
	at ru.set404.clients.controllers.TherapistController.newAvailableTime(TherapistController.java:144)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-01 19:11:37 jdbc[16]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица содержит записи со значением NULL в поле "AVAILABILITY_ID"
Column "AVAILABILITY_ID" contains null values; SQL statement:
MERGE INTO AVAILABILITY (START_TIME, END_TIME, THERAPIST_ID, AVAILABLE_DATE) VALUES (?, ?, ?, ?) [90081-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.dml.Merge.merge(Merge.java:171)
	at org.h2.command.dml.Merge.update(Merge.java:109)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at ru.set404.clients.repositories.RepositorySQLImpl.addOrUpdateAvailableTime(TherapistsRepositorySQL.java:397)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.addOrUpdateAvailableTime(<generated>)
	at ru.set404.clients.services.ClientService.addAvailableTime(TherapistService.java:94)
	at ru.set404.clients.controllers.TherapistController.newAvailableTime(TherapistController.java:144)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-01 19:13:25 jdbc[19]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица содержит записи со значением NULL в поле "AVAILABILITY_ID"
Column "AVAILABILITY_ID" contains null values; SQL statement:
MERGE INTO AVAILABILITY (START_TIME, END_TIME, THERAPIST_ID, AVAILABLE_DATE) VALUES (?, ?, ?, ?) [90081-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.dml.Merge.merge(Merge.java:171)
	at org.h2.command.dml.Merge.update(Merge.java:109)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at ru.set404.clients.repositories.RepositorySQLImpl.addOrUpdateAvailableTime(TherapistsRepositorySQL.java:397)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.addOrUpdateAvailableTime(<generated>)
	at ru.set404.clients.services.ClientService.addAvailableTime(TherapistService.java:94)
	at ru.set404.clients.controllers.TherapistController.newAvailableTime(TherapistController.java:144)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-01 19:13:40 jdbc[20]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица содержит записи со значением NULL в поле "AVAILABILITY_ID"
Column "AVAILABILITY_ID" contains null values; SQL statement:
MERGE INTO AVAILABILITY (START_TIME, END_TIME, THERAPIST_ID, AVAILABLE_DATE) VALUES (?, ?, ?, ?) [90081-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.dml.Merge.merge(Merge.java:171)
	at org.h2.command.dml.Merge.update(Merge.java:109)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at ru.set404.clients.repositories.RepositorySQLImpl.addOrUpdateAvailableTime(TherapistsRepositorySQL.java:397)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.addOrUpdateAvailableTime(<generated>)
	at ru.set404.clients.services.ClientService.addAvailableTime(TherapistService.java:94)
	at ru.set404.clients.controllers.TherapistController.newAvailableTime(TherapistController.java:144)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-01 19:16:27 jdbc[22]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица содержит записи со значением NULL в поле "AVAILABILITY_ID"
Column "AVAILABILITY_ID" contains null values; SQL statement:
MERGE INTO AVAILABILITY (START_TIME, END_TIME, THERAPIST_ID, AVAILABLE_DATE) VALUES (?, ?, ?, ?) [90081-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.dml.Merge.merge(Merge.java:171)
	at org.h2.command.dml.Merge.update(Merge.java:109)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at ru.set404.clients.repositories.RepositorySQLImpl.addOrUpdateAvailableTime(TherapistsRepositorySQL.java:397)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.addOrUpdateAvailableTime(<generated>)
	at ru.set404.clients.services.ClientService.addAvailableTime(TherapistService.java:94)
	at ru.set404.clients.controllers.TherapistController.newAvailableTime(TherapistController.java:144)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-01 21:00:39 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-01 21:00:39 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-01 21:04:34 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-01 21:05:30 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-01 21:05:30 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-01 21:11:34 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-02 00:25:54 jdbc[22]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Метод разрешен только для запросов. Используйте execute или executeUpdate вместо executeQuery
Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
UPDATE AVAILABILITY SET ISFULL = ? WHERE THERAPIST_ID = ? AND AVAILABLE_DATE = ? [90002-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.Prepared.query(Prepared.java:256)
	at org.h2.command.CommandContainer.query(CommandContainer.java:251)
	at org.h2.command.Command.executeQuery(Command.java:190)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:128)
	at ru.set404.clients.repositories.RepositorySQLImpl.markAvailabilityAs(TherapistsRepositorySQL.java:275)
	at ru.set404.clients.repositories.RepositorySQLImpl.createAppointment(TherapistsRepositorySQL.java:127)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppointment(TherapistService.java:37)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-01 21:26:16 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-03-01 21:26:21 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-02 00:27:27 jdbc[22]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "DATE, INTEGER"
Data conversion error converting "DATE, INTEGER"; SQL statement:
UPDATE AVAILABILITY SET ISFULL = ? WHERE THERAPIST_ID = ? AND AVAILABLE_DATE = ? [22018-214]
2023-03-01 21:28:44 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-01 21:28:54 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-01 21:29:44 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-02 00:31:04 jdbc[15]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:31:25 jdbc[17]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:33:53 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:34:17 jdbc[15]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:34:34 jdbc[17]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-01 21:34:46 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-02 00:34:59 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:225)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1298)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1259)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:483)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:338)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:331)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:120)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1772)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:548)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1621)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1585)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1476)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1363)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:809)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:769)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:709)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:692)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:208)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:166)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:151)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5144)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1393)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1383)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:916)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:886)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1393)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1383)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:916)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:252)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:430)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:926)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:210)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:578)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:18)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 164 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 158 more
2023-03-02 00:35:00 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:225)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1298)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1259)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:483)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:338)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:331)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:120)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1772)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:548)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1621)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1585)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1476)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1363)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:809)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:769)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:709)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:692)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:208)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:166)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:151)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5144)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1393)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1383)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:916)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:886)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1393)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1383)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:916)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:252)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:430)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:926)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:210)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:578)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:18)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 165 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 159 more
2023-03-02 00:35:09 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at ru.set404.clients.repositories.RepositorySQLImpl.deleteAppointment(TherapistsRepositorySQL.java:332)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.RepositorySQLImpl$$SpringCGLIB$$0.deleteAppointment(<generated>)
	at ru.set404.clients.services.ClientService.deleteAppointment(TherapistService.java:63)
	at ru.set404.clients.controllers.TherapistController.deleteAppointment(TherapistController.java:110)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:737)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at ru.set404.clients.config.JwtFilter.doFilter(JwtFilter.java:49)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 117 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 111 more
2023-03-02 00:35:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:36:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:37:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:38:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:38:57 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:39:41 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:40:03 jdbc[14]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:40:21 jdbc[14]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-01 21:41:24 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-02 00:43:10 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 00:44:49 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-214]
2023-03-02 13:42:23 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-02 13:46:06 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-02 13:48:28 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-03 19:02:41 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:59)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:47)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1386)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:543)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 130 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 124 more
2023-03-03 19:02:42 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:59)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:47)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1386)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:543)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 131 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 125 more
2023-03-06 14:22:19 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-06 14:27:14 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-06 14:27:19 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-06 14:30:24 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-06 14:30:34 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-06 16:10:37 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-06 16:12:30 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-07 18:22:17 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-07 18:22:59 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-07 19:14:49 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-07 19:14:57 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 14:11:54 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 14:12:14 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 14:12:14 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 14:12:24 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 14:12:24 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 14:12:32 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 14:13:28 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 14:19:31 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 14:30:55 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 15:31:15 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-08 15:42:41 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-09 18:10:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-09 18:12:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-09 18:12:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-09 18:12:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-09 18:12:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-09 18:12:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 17:39:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 17:39:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 17:39:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 17:39:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 17:39:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 17:41:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 17:41:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 17:41:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 17:41:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 17:41:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 17:47:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 17:47:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 17:47:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 17:47:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 17:47:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 17:49:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 17:49:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 17:49:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 17:49:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 17:49:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:08:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:08:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:08:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:08:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:08:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:12:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:12:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:12:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:12:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:12:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:17:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:17:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:17:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:17:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:17:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:21:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:21:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:21:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:21:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:21:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:23:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:23:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:23:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:23:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:23:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:25:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:25:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:25:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:25:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:25:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:27:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:27:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:27:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:27:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:27:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:27:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:27:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:27:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:27:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:27:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:31:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:31:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:31:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:31:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:31:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:32:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:32:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:32:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:32:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:32:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:34:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:34:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:34:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:34:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:34:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:35:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:35:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:35:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:35:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:35:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:37:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:37:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:37:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:37:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:37:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:44:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:44:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:44:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:44:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:44:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:44:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:44:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:44:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:44:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:44:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:45:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:45:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:45:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:45:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:45:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:46:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:46:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:46:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:46:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:46:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:47:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:47:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:47:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:47:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:47:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:49:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:49:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:49:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:49:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:49:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:50:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:50:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:50:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:50:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:50:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:50:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:50:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:50:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:50:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:50:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 19:58:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 19:58:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 19:58:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 19:58:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 19:58:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:00:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:00:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:00:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:00:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:00:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:01:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:01:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:01:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:01:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:01:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:11:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:11:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:11:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:11:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:11:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:20:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:20:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:20:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:20:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:20:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:23:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:23:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:23:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:23:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:23:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:23:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:23:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:23:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:23:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:23:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:25:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:25:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:25:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:25:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:25:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:27:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:27:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:27:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:27:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:27:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:31:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:31:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:31:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:31:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:31:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:34:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:34:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:34:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:34:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:34:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:48:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:48:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:48:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:48:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:48:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:49:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:49:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:49:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:49:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:49:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:52:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:52:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:52:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:52:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:52:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:55:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:55:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:55:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:55:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:55:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 20:57:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 20:57:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 20:57:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 20:57:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 20:57:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:00:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:00:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:00:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:00:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:00:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:02:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:02:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:02:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:02:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:02:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:04:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:04:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:04:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:04:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:04:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:07:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:07:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:07:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:07:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:07:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:07:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:07:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:07:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:07:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:07:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:09:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:09:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:09:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:09:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:09:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:10:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:10:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:10:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:10:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:10:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:10:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:10:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:10:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:10:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:10:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:12:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:12:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:12:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:12:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:12:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:21:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:21:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:21:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:21:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:21:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:22:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:22:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:22:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:22:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:22:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:33:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:33:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:33:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:33:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:33:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:44:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:44:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:44:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:44:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:44:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 21:54:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 21:54:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 21:54:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 21:54:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 21:54:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-11 22:09:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-11 22:09:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-11 22:09:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-11 22:09:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-11 22:09:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-15 15:34:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-15 15:34:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-15 15:34:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-15 15:34:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-15 15:34:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-19 16:51:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-19 16:51:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-19 16:51:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-19 16:51:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-19 16:51:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-19 16:53:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-19 16:53:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-19 16:53:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-19 16:53:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-19 16:53:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-19 16:55:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-19 16:55:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-19 16:55:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-19 16:55:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-19 16:55:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-19 17:02:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-19 17:02:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-19 17:02:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-19 17:02:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-19 17:02:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-19 17:03:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-19 17:03:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-19 17:03:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-19 17:03:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-19 17:03:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-19 17:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-19 17:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-19 17:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-19 17:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-19 17:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:00:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:00:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:00:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:00:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:00:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:02:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENT" не найдена
Table "APPOINTMENT" not found; SQL statement:
select a1_0.appointment_id,c1_0.id,c1_0.name,c1_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id from appointment a1_0 join client c1_0 on c1_0.id=a1_0.client_id join agentService s1_0 on true where s1_0.service_id=a1_0.service_id and a1_0.therapist_id=? [42102-214]
2023-03-20 20:02:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:02:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:02:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:02:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:02:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:02:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENT" не найдена
Table "APPOINTMENT" not found; SQL statement:
select a1_0.appointment_id,c1_0.id,c1_0.name,c1_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id from appointment a1_0 join client c1_0 on c1_0.id=a1_0.client_id join agentService s1_0 on true where s1_0.service_id=a1_0.service_id and a1_0.therapist_id=? [42102-214]
2023-03-20 20:03:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:03:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:03:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:03:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:03:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:04:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:04:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:04:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:04:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:04:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:04:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENT" не найдена
Table "CLIENT" not found; SQL statement:
select a1_0.appointment_id,c1_0.id,c1_0.name,c1_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id from appointments a1_0 join client c1_0 on c1_0.id=a1_0.client_id join agentService s1_0 on true where s1_0.service_id=a1_0.service_id and a1_0.therapist_id=? [42102-214]
2023-03-20 20:04:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:04:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:04:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:04:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:04:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:04:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICE" не найдена
Table "SERVICE" not found; SQL statement:
select a1_0.appointment_id,c1_0.id,c1_0.name,c1_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id from appointments a1_0 join clients c1_0 on c1_0.id=a1_0.client_id join agentService s1_0 on true where s1_0.service_id=a1_0.service_id and a1_0.therapist_id=? [42102-214]
2023-03-20 20:05:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:05:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:05:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:05:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:05:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:05:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "C1_0.ID" не найден
Column "C1_0.ID" not found; SQL statement:
select a1_0.appointment_id,c1_0.id,c1_0.name,c1_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id from appointments a1_0 join clients c1_0 on c1_0.id=a1_0.client_id join services s1_0 on true where s1_0.service_id=a1_0.service_id and a1_0.therapist_id=? [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1170)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$1.doPrepare(StatementPreparerImpl.java:90)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:75)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.lambda$list$0(JdbcSelectExecutorStandardImpl.java:100)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:146)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:205)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:177)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$0(ConcreteSqmSelectQueryPlan.java:113)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:335)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:276)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:571)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:363)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.list(QuerySqmImpl.java:1073)
	at org.hibernate.query.Query.getResultList(Query.java:94)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.findAppointmentsForTherapist(AppointmentRepositoryImplHQL.java:29)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.findAppointmentsForTherapist(<generated>)
	at ru.set404.clients.services.ClientService.findAllAppointments(TherapistService.java:54)
	at ru.set404.clients.controllers.TherapistController.allAppointments(TherapistController.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-20 20:06:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:06:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:06:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:06:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:06:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:06:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "A1_0.CLIENT_CLIENT_ID" не найден
Column "A1_0.CLIENT_CLIENT_ID" not found; SQL statement:
select a1_0.appointment_id,c1_0.client_id,c1_0.name,c1_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id from appointments a1_0 join clients c1_0 on c1_0.client_id=a1_0.client_client_id join services s1_0 on true where s1_0.service_id=a1_0.service_id and a1_0.therapist_id=? [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:140)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:137)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:137)
	at org.h2.expression.Expression.optimizeCondition(Expression.java:148)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1177)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$1.doPrepare(StatementPreparerImpl.java:90)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:75)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.lambda$list$0(JdbcSelectExecutorStandardImpl.java:100)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:146)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:205)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:177)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$0(ConcreteSqmSelectQueryPlan.java:113)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:335)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:276)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:571)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:363)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.list(QuerySqmImpl.java:1073)
	at org.hibernate.query.Query.getResultList(Query.java:94)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.findAppointmentsForTherapist(AppointmentRepositoryImplHQL.java:29)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.findAppointmentsForTherapist(<generated>)
	at ru.set404.clients.services.ClientService.findAllAppointments(TherapistService.java:54)
	at ru.set404.clients.controllers.TherapistController.allAppointments(TherapistController.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-20 20:09:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:09:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:09:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:09:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:09:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:09:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "A1_0.CLIENT_CLIENT_ID" не найден
Column "A1_0.CLIENT_CLIENT_ID" not found; SQL statement:
select a1_0.appointment_id,a1_0.client_client_id,a1_0.service_id,a1_0.start_time,a1_0.therapist_id from appointments a1_0 join clients c1_0 on true join services s1_0 on true where s1_0.service_id=a1_0.service_id and a1_0.therapist_id=? and a1_0.client_client_id=c1_0.client_id [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1170)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$1.doPrepare(StatementPreparerImpl.java:90)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:75)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.lambda$list$0(JdbcSelectExecutorStandardImpl.java:100)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:146)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:205)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:177)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$0(ConcreteSqmSelectQueryPlan.java:113)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:335)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:276)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:571)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:363)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.list(QuerySqmImpl.java:1073)
	at org.hibernate.query.Query.getResultList(Query.java:94)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.findAppointmentsForTherapist(AppointmentRepositoryImplHQL.java:29)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.findAppointmentsForTherapist(<generated>)
	at ru.set404.clients.services.ClientService.findAllAppointments(TherapistService.java:54)
	at ru.set404.clients.controllers.TherapistController.allAppointments(TherapistController.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-20 20:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:16:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:16:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:16:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:16:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:16:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:21:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:21:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:21:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:21:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:21:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:21:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "C2_0.APPOINTMENT_ID" не найден
Column "C2_0.APPOINTMENT_ID" not found; SQL statement:
select c1_0.client_id,a1_0.appointment_id,c2_0.client_id,c2_0.appointment_id,c2_0.name,c2_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id,c1_0.name,c1_0.phone from clients c1_0 left join appointments a1_0 on a1_0.appointment_id=c1_0.appointment_id left join clients c2_0 on c2_0.client_id=a1_0.client_id where c1_0.client_id=? [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1170)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$1.doPrepare(StatementPreparerImpl.java:90)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:75)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.lambda$list$0(JdbcSelectExecutorStandardImpl.java:100)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:146)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:205)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:183)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:140)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:110)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:72)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4401)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4391)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:597)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:570)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:224)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:363)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:113)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:75)
	at org.hibernate.event.agentService.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1244)
	at org.hibernate.internal.SessionImpl.internalLoad(SessionImpl.java:1097)
	at org.hibernate.sql.results.graph.entity.internal.EntitySelectFetchInitializer.initializeInstance(EntitySelectFetchInitializer.java:197)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:152)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:97)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:178)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$0(ConcreteSqmSelectQueryPlan.java:113)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:335)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:276)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:571)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:363)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.list(QuerySqmImpl.java:1073)
	at org.hibernate.query.Query.getResultList(Query.java:94)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.findAppointmentsForTherapist(AppointmentRepositoryImplHQL.java:29)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.findAppointmentsForTherapist(<generated>)
	at ru.set404.clients.services.ClientService.findAllAppointments(TherapistService.java:54)
	at ru.set404.clients.controllers.TherapistController.allAppointments(TherapistController.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-20 20:26:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:26:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:26:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:26:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:26:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:27:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "C2_0.APPOINTMENTS_APPOINTMENT_ID" не найден
Column "C2_0.APPOINTMENTS_APPOINTMENT_ID" not found; SQL statement:
select c1_0.client_id,a1_0.appointment_id,c2_0.client_id,c2_0.appointments_appointment_id,c2_0.name,c2_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id,c1_0.name,c1_0.phone from clients c1_0 left join appointments a1_0 on a1_0.appointment_id=c1_0.appointments_appointment_id left join clients c2_0 on c2_0.client_id=a1_0.client_id where c1_0.client_id=? [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1170)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$1.doPrepare(StatementPreparerImpl.java:90)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:75)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.lambda$list$0(JdbcSelectExecutorStandardImpl.java:100)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:146)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:205)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:183)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:140)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:110)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:72)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4401)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4391)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:597)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:570)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:224)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:363)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:113)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:75)
	at org.hibernate.event.agentService.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1244)
	at org.hibernate.internal.SessionImpl.internalLoad(SessionImpl.java:1097)
	at org.hibernate.sql.results.graph.entity.internal.EntitySelectFetchInitializer.initializeInstance(EntitySelectFetchInitializer.java:197)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:152)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:97)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:178)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$0(ConcreteSqmSelectQueryPlan.java:113)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:335)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:276)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:571)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:363)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.list(QuerySqmImpl.java:1073)
	at org.hibernate.query.Query.getResultList(Query.java:94)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.findAppointmentsForTherapist(AppointmentRepositoryImplHQL.java:29)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.findAppointmentsForTherapist(<generated>)
	at ru.set404.clients.services.ClientService.findAllAppointments(TherapistService.java:54)
	at ru.set404.clients.controllers.TherapistController.allAppointments(TherapistController.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-20 20:28:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:28:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:28:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:28:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:28:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 20:28:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "C2_0.APPOINTMENTS_APPOINTMENT_ID" не найден
Column "C2_0.APPOINTMENTS_APPOINTMENT_ID" not found; SQL statement:
select c1_0.client_id,a1_0.appointment_id,c2_0.client_id,c2_0.appointments_appointment_id,c2_0.name,c2_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id,c1_0.name,c1_0.phone from clients c1_0 left join appointments a1_0 on a1_0.appointment_id=c1_0.appointments_appointment_id left join clients c2_0 on c2_0.client_id=a1_0.client_id where c1_0.client_id=? [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1170)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$1.doPrepare(StatementPreparerImpl.java:90)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:75)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.lambda$list$0(JdbcSelectExecutorStandardImpl.java:100)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:146)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:205)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:183)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:140)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:110)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:72)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4401)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4391)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:597)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:570)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:224)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:363)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:113)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:75)
	at org.hibernate.event.agentService.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1244)
	at org.hibernate.internal.SessionImpl.internalLoad(SessionImpl.java:1097)
	at org.hibernate.sql.results.graph.entity.internal.EntitySelectFetchInitializer.initializeInstance(EntitySelectFetchInitializer.java:197)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:152)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:97)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:178)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$0(ConcreteSqmSelectQueryPlan.java:113)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:335)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:276)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:571)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:363)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.list(QuerySqmImpl.java:1073)
	at org.hibernate.query.Query.getResultList(Query.java:94)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.findAppointmentsForTherapist(AppointmentRepositoryImplHQL.java:29)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.findAppointmentsForTherapist(<generated>)
	at ru.set404.clients.services.ClientService.findAllAppointments(TherapistService.java:54)
	at ru.set404.clients.controllers.TherapistController.allAppointments(TherapistController.java:86)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-20 20:29:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-20 20:29:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-20 20:29:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-20 20:29:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-20 20:29:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-20 21:58:46 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-21 19:54:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 19:54:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 19:54:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 19:54:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 19:54:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:08:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:08:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:08:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:08:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:08:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:08:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPIST" не найдена
Table "THERAPIST" not found; SQL statement:
select a1_0.appointment_id,c1_0.client_id,c1_0.name,c1_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id from appointments a1_0 join clients c1_0 on c1_0.client_id=a1_0.client_id join services s1_0 on true join therapist t1_0 on true where a1_0.therapist_id=? and s1_0.service_id=a1_0.service_id and t1_0.id=a1_0.therapist_id and a1_0.appointment_id=? [42102-214]
2023-03-21 20:09:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:09:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:09:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:09:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:09:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:09:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:09:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:09:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:09:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:09:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:09:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "T1_0.ID" не найден
Column "T1_0.ID" not found; SQL statement:
select a1_0.appointment_id,c1_0.client_id,c1_0.name,c1_0.phone,a1_0.service_id,a1_0.start_time,a1_0.therapist_id from appointments a1_0 join clients c1_0 on c1_0.client_id=a1_0.client_id join services s1_0 on true join therapists t1_0 on true where a1_0.therapist_id=? and s1_0.service_id=a1_0.service_id and t1_0.id=a1_0.therapist_id and a1_0.appointment_id=? [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:139)
	at org.h2.expression.condition.ConditionAndOrN.optimize(ConditionAndOrN.java:168)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:136)
	at org.h2.expression.Expression.optimizeCondition(Expression.java:148)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1177)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$1.doPrepare(StatementPreparerImpl.java:90)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:75)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.lambda$list$0(JdbcSelectExecutorStandardImpl.java:100)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:146)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:205)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:177)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$0(ConcreteSqmSelectQueryPlan.java:113)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:335)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:276)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:571)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:363)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.list(QuerySqmImpl.java:1073)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:457)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.getSingleResult(QuerySqmImpl.java:1103)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.findAppointmentForTherapistById(AppointmentRepositoryImplHQL.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.findAppointmentForTherapistById(<generated>)
	at ru.set404.clients.services.ClientService.findAppointmentById(TherapistService.java:64)
	at ru.set404.clients.controllers.TherapistController.getAppointmentById(TherapistController.java:79)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-21 20:10:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:10:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:10:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:10:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:10:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:13:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:13:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:13:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:13:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:13:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:13:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:13:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:13:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:13:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:13:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:16:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:16:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:16:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:16:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:16:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:17:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:17:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:17:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:17:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:17:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:24:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:24:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:24:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:24:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:24:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:37:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:37:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:37:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:37:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:37:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:42:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:42:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:42:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:42:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:42:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:45:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:45:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:45:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:45:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:45:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:46:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:46:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:46:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:46:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:46:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:46:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:46:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:46:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:46:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:46:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:46:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:46:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:46:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:46:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:46:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:48:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:48:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:48:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:48:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:48:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:48:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:48:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:48:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:48:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:48:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 20:49:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 20:49:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 20:49:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 20:49:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 20:49:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 21:00:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 21:00:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 21:00:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 21:00:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 21:00:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 18:01:26 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.get(DbException.java:216)
	at org.h2.message.DbException.convert(DbException.java:414)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:120)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3296)
	at org.h2.mvstore.MVStore.panic(MVStore.java:585)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:461)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4056)
	at org.h2.mvstore.db.Store.<init>(Store.java:129)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.intellij.database.remote.jdbc.helpers.JdbcHelperImpl.connect(JdbcHelperImpl.java:642)
	at com.intellij.database.remote.jdbc.impl.RemoteDriverImpl.connect(RemoteDriverImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]" [50000-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 34 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.210/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:444)
	... 28 more
2023-03-21 18:01:31 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-21 21:02:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 21:02:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 21:02:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 21:02:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 21:02:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-21 21:02:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-21 21:02:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-21 21:02:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-21 21:02:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-21 21:02:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:24:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:24:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:24:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:24:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:24:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:27:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:27:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:27:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:27:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:27:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:29:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:29:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:29:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:29:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:29:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:30:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:30:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:30:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:30:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:30:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:30:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:30:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:30:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:30:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:30:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:30:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "A1_0.STARTTIME" не найден
Column "A1_0.STARTTIME" not found; SQL statement:
select a1_0.startTime from Appointments a1_0 where a1_0.therapistId=? and a1_0.startTime between ? and ? [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1170)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$1.doPrepare(StatementPreparerImpl.java:90)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:75)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.lambda$list$0(JdbcSelectExecutorStandardImpl.java:100)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:146)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:205)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:197)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$0(ConcreteSqmSelectQueryPlan.java:113)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:335)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:276)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:571)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:363)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.list(QuerySqmImpl.java:1073)
	at org.hibernate.query.Query.getResultList(Query.java:94)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.findAppointmentsByDay(AppointmentRepositoryImplHQL.java:100)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.findAppointmentsByDay(<generated>)
	at ru.set404.clients.services.ClientService.findAvailableTimes(TherapistService.java:70)
	at ru.set404.clients.services.ClientService.addAppointment(TherapistService.java:35)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-22 18:32:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:32:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:32:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:32:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:32:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:34:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:34:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:34:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:34:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:34:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:35:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:35:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:35:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:35:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:35:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:38:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:38:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:38:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:38:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:38:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:39:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:39:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:39:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:39:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:39:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:40:02 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "APPOINTMENTID" не найден
Column "APPOINTMENTID" not found; SQL statement:
insert into Appointments (appointmentId, client_id, service_id, start_time, therapist_id) values (default, ?, ?, ?, ?) [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:749)
	at org.h2.command.Parser.parseColumn(Parser.java:1256)
	at org.h2.command.Parser.parseColumnList(Parser.java:1241)
	at org.h2.command.Parser.parseInsert(Parser.java:1641)
	at org.h2.command.Parser.parsePrepared(Parser.java:814)
	at org.h2.command.Parser.parse(Parser.java:689)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:569)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1044)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:334)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$2.doPrepare(StatementPreparerImpl.java:109)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:111)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.prepare(GetGeneratedKeysDelegate.java:51)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:39)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3327)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3965)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:80)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:653)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:283)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:264)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:340)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:286)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:192)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:122)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:184)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:129)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:53)
	at org.hibernate.event.agentService.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:737)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:721)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy146.persist(Unknown Source)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.createAppointment(AppointmentRepositoryImplHQL.java:78)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppointment(TherapistService.java:43)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-22 18:40:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:40:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:40:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:40:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:40:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:41:07 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Последовательность "APPOINTMENTS_SEQ" не найдена
Sequence "APPOINTMENTS_SEQ" not found; SQL statement:
select next value for Appointments_SEQ [90036-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.readSequence(Parser.java:8471)
	at org.h2.command.Parser.readTermWithIdentifier(Parser.java:5347)
	at org.h2.command.Parser.readTermWithIdentifier(Parser.java:5217)
	at org.h2.command.Parser.readTerm(Parser.java:4901)
	at org.h2.command.Parser.readFactor(Parser.java:3398)
	at org.h2.command.Parser.readSum(Parser.java:3385)
	at org.h2.command.Parser.readConcat(Parser.java:3350)
	at org.h2.command.Parser.readCondition(Parser.java:3132)
	at org.h2.command.Parser.readExpression(Parser.java:3053)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2853)
	at org.h2.command.Parser.parseSelect(Parser.java:2871)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2762)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2633)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2612)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2605)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2598)
	at org.h2.command.Parser.parseQuery(Parser.java:2567)
	at org.h2.command.Parser.parsePrepared(Parser.java:724)
	at org.h2.command.Parser.parse(Parser.java:689)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:569)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$1.doPrepare(StatementPreparerImpl.java:90)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:75)
	at org.hibernate.id.enhanced.SequenceStructure$1.getNextValue(SequenceStructure.java:100)
	at org.hibernate.id.enhanced.PooledOptimizer.generate(PooledOptimizer.java:73)
	at org.hibernate.id.enhanced.SequenceStyleGenerator.generate(SequenceStyleGenerator.java:536)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:114)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:184)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:129)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:53)
	at org.hibernate.event.agentService.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:737)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:721)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy146.persist(Unknown Source)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.createAppointment(AppointmentRepositoryImplHQL.java:78)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppointment(TherapistService.java:43)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-22 18:41:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:41:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:41:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:41:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:41:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:41:31 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "HIBERNATE_SEQUENCES" не найдена
Table "HIBERNATE_SEQUENCES" not found; SQL statement:
select tbl.next_val from hibernate_sequences tbl where tbl.sequence_name=? for update [42102-214]
2023-03-22 18:42:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:42:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:42:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:42:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:42:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:42:03 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Последовательность "APPOINTMENTS_SEQ" не найдена
Sequence "APPOINTMENTS_SEQ" not found; SQL statement:
select next value for Appointments_SEQ [90036-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.readSequence(Parser.java:8471)
	at org.h2.command.Parser.readTermWithIdentifier(Parser.java:5347)
	at org.h2.command.Parser.readTermWithIdentifier(Parser.java:5217)
	at org.h2.command.Parser.readTerm(Parser.java:4901)
	at org.h2.command.Parser.readFactor(Parser.java:3398)
	at org.h2.command.Parser.readSum(Parser.java:3385)
	at org.h2.command.Parser.readConcat(Parser.java:3350)
	at org.h2.command.Parser.readCondition(Parser.java:3132)
	at org.h2.command.Parser.readExpression(Parser.java:3053)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2853)
	at org.h2.command.Parser.parseSelect(Parser.java:2871)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2762)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2633)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2612)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2605)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2598)
	at org.h2.command.Parser.parseQuery(Parser.java:2567)
	at org.h2.command.Parser.parsePrepared(Parser.java:724)
	at org.h2.command.Parser.parse(Parser.java:689)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:569)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$1.doPrepare(StatementPreparerImpl.java:90)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:75)
	at org.hibernate.id.enhanced.SequenceStructure$1.getNextValue(SequenceStructure.java:100)
	at org.hibernate.id.enhanced.PooledOptimizer.generate(PooledOptimizer.java:73)
	at org.hibernate.id.enhanced.SequenceStyleGenerator.generate(SequenceStyleGenerator.java:536)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:114)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:184)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:129)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:53)
	at org.hibernate.event.agentService.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:737)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:721)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy146.persist(Unknown Source)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.createAppointment(AppointmentRepositoryImplHQL.java:78)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppointment(TherapistService.java:43)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-22 18:42:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:42:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:42:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:42:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:42:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:42:28 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Столбец "APPOINTMENTID" не найден
Column "APPOINTMENTID" not found; SQL statement:
insert into Appointments (appointmentId, client_id, service_id, start_time, therapist_id) values (default, ?, ?, ?, ?) [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:749)
	at org.h2.command.Parser.parseColumn(Parser.java:1256)
	at org.h2.command.Parser.parseColumnList(Parser.java:1241)
	at org.h2.command.Parser.parseInsert(Parser.java:1641)
	at org.h2.command.Parser.parsePrepared(Parser.java:814)
	at org.h2.command.Parser.parse(Parser.java:689)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:569)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1044)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:334)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$2.doPrepare(StatementPreparerImpl.java:109)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:111)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.prepare(GetGeneratedKeysDelegate.java:51)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:39)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3327)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3965)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:80)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:653)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:283)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:264)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:340)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:286)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:192)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:122)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:184)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:129)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:53)
	at org.hibernate.event.agentService.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:737)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:721)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy146.persist(Unknown Source)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL.createAppointment(AppointmentRepositoryImplHQL.java:78)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at ru.set404.clients.repositories.AppointmentRepositoryImplHQL$$SpringCGLIB$$0.createAppointment(<generated>)
	at ru.set404.clients.services.ClientService.addAppointment(TherapistService.java:43)
	at ru.set404.clients.controllers.ClientController.newAppointment(ClientController.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.agentService(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.agentService(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at ru.set404.clients.config.JwtFilter.doFilterInternal(JwtFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.agentService(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.agentService(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-22 18:42:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:42:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:42:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:42:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:42:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:53:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:53:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:53:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:53:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:53:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 18:59:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 18:59:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 18:59:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 18:59:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 18:59:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:00:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:00:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:00:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:00:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:00:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:00:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:00:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:00:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:00:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:00:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:01:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:01:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:01:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:01:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:01:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:02:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:02:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:02:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:02:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:02:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:05:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:05:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:05:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:05:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:05:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:08:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:08:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:08:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:08:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:08:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:08:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:08:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:08:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:08:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:08:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:12:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:12:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:12:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:12:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:12:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:13:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:13:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:13:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:13:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:13:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:14:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:14:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:14:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:14:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:14:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:15:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:16:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:16:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:16:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:16:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:16:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:19:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:19:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:19:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:19:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:19:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 19:20:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 19:20:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 19:20:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 19:20:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 19:20:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-03-22 21:57:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-03-22 21:57:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-03-22 21:57:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-03-22 21:57:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-03-22 21:57:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-05 11:05:44 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-05 11:05:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "[*]THERAPISTS"; ожидалось "TRUNCATE"
Syntax error in SQL statement "[*]THERAPISTS"; expected "TRUNCATE"; SQL statement:
THERAPISTS [42001-210]
2023-04-05 11:06:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPIST" не найдена
Table "THERAPIST" not found; SQL statement:
select * from therapist where NAME like '%r' [42102-210]
2023-04-06 19:17:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-06 19:17:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-06 19:17:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-06 19:17:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-06 19:17:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-06 16:22:05 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-06 19:22:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-06 19:22:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-06 19:22:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-06 19:22:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-06 19:22:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-06 19:30:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-06 19:30:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-06 19:30:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-06 19:30:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-06 19:30:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-06 19:33:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-06 19:33:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-06 19:33:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-06 19:33:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-06 19:33:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-06 19:46:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-06 19:46:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-06 19:46:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-06 19:46:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-06 19:46:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-06 19:47:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-06 19:47:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-06 19:47:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-06 19:47:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-06 19:47:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-06 19:49:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-06 19:49:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-06 19:49:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-06 19:49:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-06 19:49:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-06 19:54:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-06 19:54:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-06 19:54:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-06 19:54:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-06 19:54:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-06 19:55:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-06 19:55:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-06 19:55:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-06 19:55:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-06 19:55:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 16:47:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 16:47:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 16:47:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 16:47:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 16:47:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 16:47:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 16:47:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 16:47:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 16:47:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 16:47:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 16:51:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 16:51:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 16:51:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 16:51:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 16:51:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 16:52:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 16:52:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 16:52:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 16:52:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 16:52:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 17:53:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 17:53:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 17:53:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 17:53:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 17:53:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 17:56:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 17:56:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 17:56:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 17:56:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 17:56:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 17:57:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 17:57:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 17:57:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 17:57:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 17:57:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:03:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:03:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:03:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:03:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:03:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:03:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:03:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:03:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:03:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:03:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:10:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:10:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:10:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:10:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:10:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:12:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:12:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:12:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:12:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:12:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:12:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:12:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:12:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:12:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:12:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:16:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:16:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:16:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:16:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:16:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:17:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:17:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:17:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:17:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:17:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:18:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:18:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:18:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:18:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:18:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:23:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:23:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:23:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:23:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:23:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:24:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:24:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:24:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:24:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:24:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:26:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:26:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:26:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:26:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:26:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 18:34:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 18:34:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 18:34:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 18:34:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 18:34:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 19:10:10 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.isEmbeddedDatabase(DataSourceScriptDatabaseInitializer.java:67)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.isEnabled(AbstractScriptDatabaseInitializer.java:84)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:23)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 53 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 47 more
2023-04-15 19:10:11 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:166)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:131)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:131)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:23)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 58 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 52 more
2023-04-15 19:10:12 database: flush
org.h2.message.DbException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:284)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:177)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:36)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:255)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:230)
	at org.hibernate.agentService.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:44)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:218)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:138)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1350)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1421)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1797)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1747)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1130)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:905)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291)
	at ru.set404.clients.ManagementApplication.main(ClientsApplication.java:23)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 59 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: /Users/kot/Java/clients/src/main/resources/static/sampledata.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 53 more
2023-04-15 19:10:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 19:10:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 19:10:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 19:10:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 19:10:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 19:13:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 19:13:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 19:13:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 19:13:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 19:13:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 19:22:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 19:22:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 19:22:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 19:22:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 19:22:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 19:23:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 19:23:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 19:23:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 19:23:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 19:23:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 19:27:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 19:27:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 19:27:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 19:27:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 19:27:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
2023-04-15 19:30:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "CLIENTS" уже существует
Table "CLIENTS" already exists; SQL statement:
create table CLIENTS ( CLIENT_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null ) [42101-214]
2023-04-15 19:30:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "THERAPISTS" уже существует
Table "THERAPISTS" already exists; SQL statement:
create table THERAPISTS ( THERAPIST_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(50) not null, PHONE CHARACTER VARYING(20) not null, PASSWORD CHARACTER VARYING(255) not null, ROLE CHARACTER VARYING(255) not null ) [42101-214]
2023-04-15 19:30:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AVAILABILITY" уже существует
Table "AVAILABILITY" already exists; SQL statement:
create table AVAILABILITY ( AVAILABILITY_ID INTEGER auto_increment primary key, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, START_TIME TIME not null, END_TIME TIME not null, AVAILABLE_DATE DATE not null, ISFULL BOOLEAN default FALSE ) [42101-214]
2023-04-15 19:30:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "SERVICES" уже существует
Table "SERVICES" already exists; SQL statement:
create table SERVICES ( SERVICE_ID INTEGER auto_increment primary key, NAME CHARACTER VARYING(100) not null, DESCRIPTION CHARACTER LARGE OBJECT, DURATION INTEGER not null, PRICE NUMERIC(10, 2) not null, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE ) [42101-214]
2023-04-15 19:30:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "APPOINTMENTS" уже существует
Table "APPOINTMENTS" already exists; SQL statement:
create table APPOINTMENTS ( APPOINTMENT_ID INTEGER auto_increment primary key, CLIENT_ID INTEGER not null references CLIENTS ON DELETE CASCADE, THERAPIST_ID INTEGER not null references THERAPISTS ON DELETE CASCADE, SERVICE_ID INTEGER not null references SERVICES ON DELETE CASCADE, START_TIME TIMESTAMP not null ) [42101-214]
